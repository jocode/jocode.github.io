---
// Import necessary assets
import backgroundImage from '../assets/img/background.webp';
---

<header class="header">
  <div class="contenedor">
    <nav class="menu">
      <div>
        <a class="page-scroll" href="#acerca-de">Acerca de</a>
        <a class="page-scroll" href="#trabajos">Trabajos</a>
        <a class="page-scroll" href="#contacto">Contacto</a>
      </div>
    </nav>

    <div class="contenedor-texto">
      <div class="texto">
        <h1 class="nombre">Johan Mosquera</h1>
        <h2 class="profesion">Geek & Developer</h2>
      </div>
    </div>
  </div>

  <div class="layer"></div>
</header>

<style>
  /*--------- Header -----------*/
  .header {
    max-height: 600px;
    background-color: #15100d; /* Color de fondo como fallback */
    position: relative;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
  }
  
  /* Resto del estilo sin la imagen de fondo */
  .layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3);
    z-index: 1;
  }
  
  .contenedor {
    position: relative;
    z-index: 2;
    width: 90%;
    max-width: 1000px;
    margin: auto;
    overflow: hidden;
  }

  header .menu {
    margin: 40px 0;
    text-align: right;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  header .menu .icon {
    align-self: flex-end;
  }

  header .menu a {
    margin: 0 20px;
    color: white;
    display: inline-block;
    align-items: center;
    font-size: 1em;
    text-decoration: none;
    padding-bottom: 9px;
    border-bottom: 2px solid transparent;
  }

  header .menu a:hover {
    border-bottom: 2px solid white;
  }

  header .contenedor-texto {
    display: flex;
    justify-content: center;
    align-content: center;
    margin: 190px 0;
  }

  header .contenedor-texto .texto {
    border: 2px solid rgba(255, 255, 255, 0.5);
    background: rgba(0, 0, 0, 0.5);
    border-radius: 3px;
    display: inline-block;
    text-align: center;
    padding: 20px 60px;
  }

  header .contenedor-texto .texto h1,
  header .contenedor-texto .texto h2 {
    color: white;
    font-weight: 300;
    margin: 0;
  }

  header .contenedor-texto .texto .nombre {
    margin-bottom: 10px;
    font-size: 50px;
    line-height: 50px;
  }

  header .contenedor-texto .texto .profesion {
    font-size: 25px;
    line-height: 25px;
  }

  /*------------ Media Queries -------------*/
  @media screen and (max-width: 800px) {
    header .menu {
      text-align: center;
    }
  }

  @media screen and (max-width: 500px) {
    header .menu {
      justify-content: center;
    }

    header .menu .icon {
      display: none;
    }

    header .contenedor-texto .texto .nombre {
      font-size: 35px;
    }

    header .contenedor-texto .texto .profesion {
      font-size: 18px;
    }
  }
</style>

<script define:vars={{ backgroundImageUrl: backgroundImage.src }}>
  // Carga perezosa optimizada para la imagen de fondo
  document.addEventListener('DOMContentLoaded', () => {
    // Crear un observador de intersecci칩n para detectar cuando el header est치 en viewport
    const header = document.querySelector('.header');
    
    if ('IntersectionObserver' in window) {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          // Cuando el header es visible, cargar la imagen
          if (entry.isIntersecting) {
            setTimeout(() => {
              const img = new Image();
              img.onload = () => {
                // Una vez cargada, aplicar como imagen de fondo
                header.style.backgroundImage = `url(${backgroundImageUrl})`;
                header.classList.add('bg-loaded');
              };
              img.src = backgroundImageUrl;
            }, 100); // Peque침o retraso para priorizar otros recursos
            observer.unobserve(entry.target);
          }
        });
      }, {
        rootMargin: '200px 0px', // Comenzar a cargar cuando se acerca al viewport
        threshold: 0.01
      });

      observer.observe(header);
    } else {
      // Fallback para navegadores que no soportan IntersectionObserver
      setTimeout(() => {
        header.style.backgroundImage = `url(${backgroundImageUrl})`;
      }, 300);
    }
  });
</script>

<style>
  /* Estilos para la transici칩n suave de la imagen */
  .header {
    transition: background-image 0.5s ease-in-out;
  }
  
  .bg-loaded {
    animation: fadeIn 0.5s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0.8; }
    to { opacity: 1; }
  }
</style>
